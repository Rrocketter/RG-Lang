| (means plus or minus)
* (zero or more)
? (optional)

expression : KEYWORD: VAR IDENTIFIER EQ expr
           : comparision expression (( KEYWORD: AND | KEYWORD: OR ) comparision expression)*

comparision expression           :  NOT comparision expression
                                 : arithmetic expression ((EE | LT | GT | LTE | GTE) arithmetic expression)*

arithmetic expression           : term ((PLUS | MINUS) term)*

term : factor ((MUL| DIV) factor ) *

factor : (PLUS | MINUS) factor
       : power

POWER : call (POW factor)*

call : atom (LPAREN (expression (COMMA expression)*)? RPAREN)?

atom :  INT | FlOAT | IDENTIFIER
     :  LPAREN EXPR RPAREN
     :  if-expression
     :  for-expression
     :  while-expression
     :  function-definition

if-expression : KEYWORD: IF expression KEYWORD: THEN expression
                (KEYWORD: ELIF expression KEYWORD: THEN expression)*
                (KEYWORD: ELSE expression)?

for-expression : KEYWORD: FOR IDENTIFIER EQ expression KEYWORD: TO expression
                 (KEYWORD: STEP expression)? KEYWORD: THEN expression

while-expression : KEYWORD: WHILE expression KEYWORD: THEN expression

function-definition : KEYWORD: FUNC IDENTIFIER?
                     LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
                     ARROW expression

```